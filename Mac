#!/bin/bash

function check_and_set_permissions() {
    echo "检查和设置权限..."
    
    if [ ! -x "$0" ]; then
        chmod +x "$0"
    fi
    
    if [ -d ~/cysic-verifier ]; then
        chmod 755 ~/cysic-verifier
    fi
    
    if [ -f ~/cysic-verifier/verifier ]; then
        chmod 755 ~/cysic-verifier/verifier
    fi
    if [ -f ~/cysic-verifier/libzkp.dylib ]; then
        chmod 644 ~/cysic-verifier/libzkp.dylib
    fi
    
    echo "权限检查和设置完成。"
}

function download_and_configure() {
    echo "开始下载并配置 Cysic Verifier..."
    
    rm -rf ~/cysic-verifier
    cd ~
    mkdir cysic-verifier
    curl -L https://cysic-verifiers.oss-accelerate.aliyuncs.com/verifier_mac > ~/cysic-verifier/verifier
    curl -L https://cysic-verifiers.oss-accelerate.aliyuncs.com/libzkp.dylib > ~/cysic-verifier/libzkp.dylib

    cat << EOF > ~/cysic-verifier/config.yaml
# Not Change
chain:
  # Not Change
  endpoint: "testnet-node-1.prover.xyz:9090"
  # Not Change
  chain_id: "cysicmint_9000-1"
  # Not Change
  gas_coin: "cysic"
  # Not Change
  gas_price: 10
  # Modify Here： ! Your Address (EVM) submitted to claim rewards
claim_reward_address: "0x696969696969"

server:
  # don't modify this
  cysic_endpoint: "https://api-testnet.prover.xyz"
EOF

    echo "请输入您的奖励地址（EVM地址）："
    read reward_address
    
    sed -i '' "s/0x696969696969/$reward_address/" ~/cysic-verifier/config.yaml
    
    echo "配置完成。您的奖励地址已更新为：$reward_address"
    echo "配置文件内容如下："
    cat ~/cysic-verifier/config.yaml
    
    # 设置下载的文件权限
    chmod 755 ~/cysic-verifier/verifier
    chmod 644 ~/cysic-verifier/libzkp.dylib
}

function start_verifier() {
    echo "正在启动 Cysic Verifier..."
    cd ~/cysic-verifier/
    DYLD_LIBRARY_PATH=".:~/miniconda3/lib:$DYLD_LIBRARY_PATH" CHAIN_ID=534352 ./verifier
}

function download_and_replace_file() {
    echo "开始下载并替换文件..."

    # 检查并安装 Homebrew
    if ! command -v brew &> /dev/null; then
        echo "Homebrew 未安装。正在安装 Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo "Homebrew 安装完成。请重新启动终端或运行 'source ~/.bash_profile' 更新 PATH。"
        exit 1
    else
        echo "Homebrew 已安装。"
    fi

    # 检查并安装软件包的函数
    install_if_missing() {
        local cmd="$1"
        local install_cmd="$2"
        if ! command -v "$cmd" &> /dev/null; then
            echo "正在安装 $cmd..."
            eval "$install_cmd"
        else
            echo "$cmd 已安装。"
        fi
    }

    # 检查并安装 curl 和 unzip
    install_if_missing "curl" "brew install curl"
    install_if_missing "unzip" "brew install unzip"

    TARGET_DIR="$HOME/cysic-verifier/data"
    FILE_PATH="$TARGET_DIR/cysic-verifier.db"
    PART1_URL="https://github.com/mang1024/mang/raw/main/cysic-verifier-part_aa"
    PART2_URL="https://github.com/mang1024/mang/raw/main/cysic-verifier-part_ab"

    mkdir -p "$TARGET_DIR"

    echo "尝试从 GitHub 下载文件部分..."
    
    if curl -L "$PART1_URL" -o "$TARGET_DIR/cysic-verifier-part_aa" && curl -L "$PART2_URL" -o "$TARGET_DIR/cysic-verifier-part_ab"; then
        cat "$TARGET_DIR/cysic-verifier-part_aa" "$TARGET_DIR/cysic-verifier-part_ab" > "$TARGET_DIR/cysic-verifier.zip"

        echo "正在从合并的 zip 文件中提取 cysic-verifier.db..."
        if unzip -o "$TARGET_DIR/cysic-verifier.zip" -d "$TARGET_DIR"; then
            echo "提取完成。"
        else
            echo "提取失败。请检查 zip 文件。"
            return 1
        fi

        sudo chown "$(whoami):$(whoami)" "$FILE_PATH"
        echo "-----------------------------------------"
        echo "文件已更新: $FILE_PATH"
        echo "过程完成。"
    else
        echo "下载失败。未做任何更改。"
        return 1
    fi

    # 清理临时文件，只保留解压后的文件
    rm -f "$TARGET_DIR/cysic-verifier-part_aa" "$TARGET_DIR/cysic-verifier-part_ab" "$TARGET_DIR/cysic-verifier.zip"

    cd ~
}

# 在脚本开始时检查和设置权限
check_and_set_permissions

while true; do
    echo
    echo "Cysic Verifier 控制面板"
    echo "1. 下载并配置 Cysic Verifier"
    echo "2. 启动 Cysic Verifier"
    echo "3. 替换文件并退出"
    echo "4. 退出"
    echo
    read -p "请选择操作 (1-4): " choice

    case $choice in
        1)
            download_and_configure
            ;;
        2)
            start_verifier
            ;;
        3)
            download_and_replace_file
            exit 0
            ;;
        4)
            echo "感谢使用，再见！"
            exit 0
            ;;
        *)
            echo "无效的选择，请重新输入。"
            ;;
    esac

    echo
    read -p "按回车键继续..."
done
